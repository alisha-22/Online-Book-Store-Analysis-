SELECT * FROM onlinebookstoreproject.books;

-- 1- retrive all from books where genre is fiction
select * 
from onlinebookstoreproject.books 
where Genre="Fiction";

-- 2- find the books published after 1950 
select * 
from onlinebookstoreproject.books
where Published_Year > 1950;

-- 3- list all the customers from canada
select * 
from onlinebookstoreproject.customers 
where Country="Canada";

-- 4- show orders placed in november 2023
SELECT * FROM onlinebookstoreproject.orders
WHERE STR_TO_DATE(Order_Date, '%d-%m-%Y')
      BETWEEN STR_TO_DATE('01-11-2023', '%d-%m-%Y')
      AND STR_TO_DATE('30-11-2023', '%d-%m-%Y');
      
-- 5- Retrive the total stock of books available
select SUM(Stock) 
as total_stock 
from onlinebookstoreproject.books;

-- 6- retrive the most expensive book
SELECT * 
FROM onlinebookstoreproject.books 
order by Price desc limit 1 ;

-- 7- info of the customers who orders more than 1 quantity of the book
select * 
from onlinebookstoreproject.orders
where Quantity>1;

-- 8- retrive all orders where total amount exceeds $20
select * 
from onlinebookstoreproject.orders
where Total_Amount>20;

-- 9- List all genre available in books table
SELECT distinct Genre 
FROM onlinebookstoreproject.books;

-- 10- find all the books with lowest stock
SELECT * 
FROM onlinebookstoreproject.books 
order by Stock asc 
limit 10;

-- 11- calculate the total revenue generated by all orders
select TRUNCATE(SUM(Total_Amount), 0)
as Total_Revenue
from onlinebookstoreproject.orders;

-- 12- Retrive total number of books sold for each genre
select b.Genre,
       SUM(o.Quantity) as Total_Books_Sold
from onlinebookstoreproject.books as b
inner join onlinebookstoreproject.orders as o
    on b.Book_ID = o.Book_ID
group  by b.Genre;

-- 13- Find the average price of books in the fantasy genre
select Genre,truncate(avg(Price),2) as Average_Price
FROM onlinebookstoreproject.books
where Genre="Fantasy";

-- 14- list customers who have place atleat 2 orders
select Customer_ID,count(Order_ID) as Repeat_Order
from onlinebookstoreproject.orders
group by Customer_ID
having count(Order_ID)>=2;

-- 14- find the most frequently ordered book
select b.Title,o.Book_ID,
count(o.Order_ID) as Frequently_Saled_Books
from onlinebookstoreproject.books as b
join onlinebookstoreproject.orders as o 
on o.Book_ID=b.Book_ID
group by b.Title,o.Book_ID 
order by count(o.Order_ID) desc;
-- 2nd way
select Book_ID, 
count(Order_ID) as Frequently_Saled_Books
from onlinebookstoreproject.orders
group by Book_ID
order by count(Order_ID) desc;

-- show top 3 most expensive books of fantasy genre
select Title,Genre,Price 
from onlinebookstoreproject.books
where Genre='Fantasy' 
order by Price desc
limit 3;

-- Retrive the total quantity of books sold by each author
select b.author, 
sum(o.Quantity) as Total_Sold
from onlinebookstoreproject.books as b
join onlinebookstoreproject.orders as o
on o.Book_ID=b.Book_ID
group by b.author;

-- list the cites where customer spend more than $30
select distinct c.City,o.Total_Amount
from onlinebookstoreproject.customers as c
join onlinebookstoreproject.orders as o
on c.Customer_ID=o.Customer_ID
where Total_Amount>30;

-- find the customer who spend more on orders
select c.Name,o.Customer_ID,
truncate(sum(o.Total_Amount),2) as total_spend
from onlinebookstoreproject.customers as c
join onlinebookstoreproject.orders as o
on c.Customer_ID=o.Customer_ID
group by c.Name,o.Customer_ID
order by truncate(sum(o.Total_Amount),2) desc;

-- calculate the remaing stock after full filling all orders
select b.Title,b.Book_ID,b.Stock,
coalesce(sum(o.Quantity),0) as OrderQuantity,
b.Stock-coalesce(sum(o.Quantity),0) as RemaingStock
from onlinebookstoreproject.books as b
left join onlinebookstoreproject.orders as o
on b.Book_ID=o.Book_ID
group by b.Book_ID,b.Title,b.Book_ID,b.Stock
order by b.Book_ID;
 





